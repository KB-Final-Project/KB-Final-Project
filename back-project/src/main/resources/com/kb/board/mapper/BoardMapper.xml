<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kb.board.mapper.BoardMapper">

    <resultMap type="com.kb.board.dto.BoardDTO" id="boardResultMap">
        <id property="boardId" column="bno"/>
        <result property="type" column="type"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="status" column="status"/> <!-- 상태 필드 -->
    </resultMap>

    <resultMap type="com.kb.board.dto.BoardCategory" id="boardCategoryMap">
        <id property="id" column="id"/>
        <result property="type" column="type"/>
        <result property="name" column="name"/>
        <result property="level" column="level"/>
        <result property="orderNo" column="order_no"/>
    </resultMap>

    <resultMap type="com.kb.board.dto.BoardPost" id="boardPostResultMap">
        <id property="boardId" column="board_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="status" column="status" typeHandler="com.kb.board.handler.BoardStatusTypeHandler"/> <!-- 상태 변환기 추가 -->
        <result property="readCount" column="read_count"/>
        <result property="createdDate" column="created_date"/>
        <result property="modifiedDate" column="modified_date"/>
        <result property="type" column="board_category"/> <!-- 카테고리 타입 -->
        <result property="commentCount" column="comment_count"/>
        <result property="likesCount" column="likes_count"/>
        <result property="memberId" column="member_id"/>
    </resultMap>

    <!-- boardPost 카테고리 가져오는 select문 -->
    <select id="selectBoardCategory" resultMap="boardCategoryMap">
        SELECT * FROM board_category ORDER BY id;
    </select>

    <select id="selectBoardList" parameterType="com.kb.board.dto.BoardParam" resultMap="boardResultMap">
    <![CDATA[
        SELECT
            b.boardId, b.type, b.title,
            b.content, b.status
        FROM board_post b
        WHERE
            b.status = 'y'
        ORDER BY b.boardId DESC
            LIMIT #{limit} OFFSET #{offset}
        ]]>
    </select>

    <select id="selectBoardCount" parameterType="com.kb.board.dto.BoardParam" resultType="int">
    <![CDATA[
        SELECT COUNT(DISTINCT b.boardId)
        FROM board_post b
        WHERE
            b.status = 'y'
        ]]>
    </select>

    <select id="selectBoardByBoardId" parameterType="long" resultMap="boardResultMap">
        SELECT
            b.board_id, b.type, b.title, b.content, b.status
        FROM board_post b
        WHERE b.status = 'y' AND b.board_id = #{boardId}
    </select>

    <insert id="insertBoard" parameterType="com.kb.board.dto.BoardPost">
        <selectKey keyProperty="boardId" resultType="long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO board_post (board_id, type, title, content, status, member_id)
        VALUES (DEFAULT, #{type}, #{title}, #{content}, #{status.value}, #{memberId})
    </insert>



    <update id="updateBoard" parameterType="com.kb.board.dto.BoardPost">
        UPDATE board_post SET
        type = #{type}, title = #{title}, content = #{content}, status = #{status}
        WHERE board_id = #{boardId}
    </update>

    <update id="deleteBoard" parameterType="long">
        UPDATE board_post SET
            status = 'n'
        WHERE board_id = #{boardId}
    </update>

    <!-- board_post 관련 쿼리 -->
    <select id="selectBoardPostList" parameterType="com.kb.board.dto.BoardParam" resultMap="boardPostResultMap">
        <![CDATA[
        SELECT
            bp.board_id as boardId,
            bp.title as title,
            bp.content as content,
            bp.read_count as readCount,
            bp.created_date as createdDate,
            bp.modified_date as modifiedDate,
            bp.board_category as type,
            bp.comment_count as commentCount,
            bp.likes_count as likesCount,
            bp.member_id as memberId
        FROM board_post bp
        ORDER BY bp.board_id DESC
            LIMIT #{limit} OFFSET #{offset}
        ]]>
    </select>

    <select id="selectBoardPostById" parameterType="int" resultMap="boardPostResultMap">
        <![CDATA[
        SELECT
            bp.board_id as boardId,
            bp.title as title,
            bp.content as content,
            bp.read_count as readCount,
            bp.created_date as createdDate,
            bp.modified_date as modifiedDate,
            bp.board_category as type,
            bp.comment_count as commentCount,
            bp.likes_count as likesCount,
            bp.member_id as memberId
        FROM board_post bp
        WHERE bp.board_id = #{boardId}
        ]]>
    </select>

    <insert id="insertBoardPost" parameterType="com.kb.board.dto.BoardPost">
        <selectKey keyProperty="boardId" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        <![CDATA[
        INSERT INTO board_post (title, content, member_id, type)
        VALUES (#{title}, #{content}, #{memberId}, #{type})
        ]]>
    </insert>

    <update id="updateBoardPost" parameterType="com.kb.board.dto.BoardPost">
        <![CDATA[
        UPDATE board_post
        SET title = #{title},
            content = #{content},
            modified_date = CURRENT_TIMESTAMP,
            board_category = #{type}
        WHERE board_id = #{boardId}
        ]]>
    </update>

    <update id="deleteBoardPost" parameterType="int">
        <![CDATA[
        DELETE FROM board_post WHERE board_id = #{boardId}
        ]]>
    </update>

</mapper>
