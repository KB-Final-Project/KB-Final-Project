<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kb.board.mapper.BoardMapper">


    <resultMap type="com.kb.board.dto.BoardCategory" id="boardCategoryMap">
        <id property="id" column="id"/>
        <result property="type" column="type"/>
        <result property="name" column="name"/>
        <result property="level" column="level"/>
        <result property="orderNo" column="order_no"/>
    </resultMap>


    <resultMap type="com.kb.board.dto.BoardDTO" id="boardResultMap">
        <id property="bno" column="bno"/>
        <result property="type" column="type"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="status" column="status"/>
    </resultMap>


    <resultMap type="com.kb.board.dto.BoardPost" id="boardPostResultMap">
        <id property="postId" column="post_id"/>
        <result property="bno" column="bno"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="status" column="status"/>
        <result property="readCount" column="read_count"/>
        <result property="createdDate" column="created_date"/>
        <result property="modifiedDate" column="modified_date"/>
        <result property="type" column="type"/>
        <result property="commentCount" column="comment_count"/>
        <result property="likesCount" column="likes_count"/>
        <result property="memberId" column="member_id"/>
    </resultMap>

    <resultMap type="com.kb.board.dto.BoardAttachFile" id="boardAttachFileResultMap">
        <id property="fno" column="fno"/>
        <result property="bno" column="board_bno"/>
        <result property="originalFilename" column="original_filename"/>
        <result property="renamedFilename" column="renamed_filename"/>
        <result property="contentType" column="content_type"/>
        <result property="size" column="size"/>
        <result property="createDate" column="create_date"/>
    </resultMap>


    <resultMap type="com.kb.board.dto.BoardReply" id="boardReplyResultMap">
        <result property="rno" column="rno" />
        <result property="bno" column="board_bno" />
        <result property="mno" column="member_mno" />
        <result property="memberId" column="member_id" />
        <result property="memberName" column="name" />
        <result property="content" column="content" />
        <result property="status" column="status" />
        <result property="createDate" column="create_date" />
        <result property="modifyDate" column="modify_date" />
    </resultMap>

    <resultMap id="postResultMap" type="com.kb.board.dto.BoardPost">
        <result property="postId" column="post_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="bno" column="bno"/>
        <result property="status" column="status"/>
        <result property="type" column="type"/>
        <result property="memberId" column="member_id"/>
        <result property="authorId" column="author_id"/>
        <result property="readCount" column="read_count"/>
        <result property="likesCount" column="likes_count"/>
        <result property="commentCount" column="comment_count"/>
        <result property="createdDate" column="created_date"/>
        <result property="modifiedDate" column="modified_date"/>
        <!-- 필요한 다른 필드 매핑 추가 -->
    </resultMap>

    <select id="selectBoardCategory" resultMap="boardCategoryMap">
        SELECT * FROM board_category ORDER BY id;
    </select>

    <select id="selectBoardList" parameterType="com.kb.board.dto.BoardParam" resultMap="boardResultMap">
        <![CDATA[
        SELECT
            b.bno, b.type, b.title, b.content, b.status
        FROM board b
        WHERE
            b.status = 'y'
        ORDER BY b.bno DESC
            LIMIT #{limit} OFFSET #{offset}
        ]]>
    </select>

    <select id="selectBoardCount" parameterType="com.kb.board.dto.BoardParam" resultType="int">
        <![CDATA[
        SELECT COUNT(DISTINCT b.bno)
        FROM board b
        WHERE
            b.status = 'y'
        ]]>
    </select>

    <select id="selectBoardByBno" parameterType="int" resultMap="boardPostResultMap">
        SELECT
            bp.post_id AS postId,
            bp.bno AS bno,
            bp.title AS title,
            bp.content AS content,
            bp.status AS status
        FROM board_post bp
        WHERE bp.bno = #{bno} AND bp.status = 'y'
    </select>


    <select id="selectPostCount" resultType="int">
        SELECT COUNT(*)
        FROM board_post
        WHERE bno = #{bno}
        <!-- 추가적인 조건이 필요하다면 여기에 작성 -->
    </select>

    <select id="selectPostList" resultMap="postResultMap" parameterType="com.kb.board.dto.PostParam">
        SELECT
            bp.*,
            m.id AS author_id
        FROM
            board_post bp
                LEFT JOIN
            member m ON bp.member_id = m.mno
        WHERE
            bp.bno = #{boardId}
        ORDER BY
            bp.created_date DESC
            LIMIT #{limit} OFFSET #{offset}
    </select>

    <update id="updateBoard" parameterType="com.kb.board.dto.BoardPost">
        <![CDATA[
        UPDATE board_post
        SET type = #{type}, title = #{title}, content = #{content}, status = #{status}
        WHERE post_id = #{postId}
        ]]>
    </update>

    <!-- 게시글 조회시 readCount 갱신용 -->
    <update id="updateReadCount" parameterType="com.kb.board.dto.BoardPost">
        update board_post set
            read_count = #{readCount}
        where post_id = #{postId}
    </update>

    <update id="deleteBoard" parameterType="java.lang.Long">
        <![CDATA[
        UPDATE board_post
        SET status = 'n'
        WHERE post_id = #{postId}
        ]]>
    </update>

    <!-- 파일 가져오기 -->
    <select id="selectAttachFileByFno" parameterType="long" resultMap="boardAttachFileResultMap">
        select
            fno, bno, original_filename, renamed_filename, content_type, size, create_date
        from board_attach_file
        where fno = #{fno}
    </select>

    <!-- 파일 리스트 -->
    <select id="selectAttachFileByBno" resultMap="boardAttachFileResultMap">
        select
            fno, bno, original_filename, renamed_filename, content_type, size, create_date
        from board_attach_file
        where bno = #{bno}
    </select>

    <!-- 파일 첨부 -->
    <insert id="insertAttachFile" parameterType="com.kb.board.dto.BoardAttachFile">
        INSERT INTO BOARD_ATTACH_FILE
        (fno, bno, original_filename, renamed_filename, content_type, size, create_date)
        VALUES(default, #{bno}, #{originalFilename}, #{renamedFilename}, #{contentType}, ${size}, DEFAULT)
    </insert>

    <!-- 파일 삭제 -->
    <delete id="deleteAttachFile" parameterType="long">
        delete from board_attach_file where fno = #{fno}
    </delete>

    <!-- 댓글 등록 -->
    <insert id="insertReply" parameterType="com.kb.board.dto.BoardReply">
        <selectKey keyProperty="rno" resultType="int" order="AFTER">
            SELECT @@identity as rno
        </selectKey>
        insert into board_reply(
        rno, bno, member_mno, content, status,
        create_date, modify_date)
        VALUES(
        default, #{bno}, #{mno}, #{content},
        default, default, default
        )
    </insert>


    <!-- 댓글 리스트 -->
    <select id="selectReplyByBno" resultMap="boardReplyResultMap" >
        select
            r.rno, r.bno, r.content, m.id as member_id, m.name, r.create_date, r.modify_date
        from board_reply r
                 join member m on(r.mno = m.mno)
        where r.status='y' and r.bno = #{bno}
        order by r.rno desc
    </select>

    <select id="selectBoardPostList" parameterType="com.kb.board.dto.BoardParam" resultMap="boardPostResultMap">
        <![CDATA[
        SELECT
            bp.post_id AS postId,
            bp.bno AS bno,
            bp.title AS title,
            bp.content AS content,
            bp.read_count AS readCount,
            bp.created_date AS createdDate,
            bp.modified_date AS modifiedDate,
            bp.type AS type,
            bp.status AS status,
            bp.comment_count AS commentCount,
            bp.likes_count AS likesCount,
            bp.member_id AS memberId
        FROM board_post bp
        ORDER BY bp.post_id DESC
            LIMIT #{limit} OFFSET #{offset}
        ]]>
    </select>

    <select id="selectBoardPostByPostId" parameterType="java.lang.Long" resultMap="boardPostResultMap">
        <![CDATA[
        SELECT
            bp.post_id AS postId,
            bp.bno AS bno,
            bp.title AS title,
            bp.content AS content,
            bp.read_count AS readCount,
            bp.created_date AS createdDate,
            bp.modified_date AS modifiedDate,
            bp.type AS type,
            bp.status AS status,
            bp.comment_count AS commentCount,
            bp.likes_count AS likesCount,
            bp.member_id AS memberId
        FROM board_post bp
        WHERE bp.post_id = #{postId}
        ]]>
    </select>

    <insert id="insertBoardPost" parameterType="com.kb.board.dto.BoardPost">
        <selectKey keyProperty="postId" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        <![CDATA[
    INSERT INTO board_post (bno, title, content, member_id, type, status, author_id, created_date)
    VALUES (#{bno}, #{title}, #{content}, #{memberId}, #{type},
            COALESCE(#{status}, 'y'), #{authorId}, #{createdDate})
    ]]>
    </insert>

    <update id="updateBoardPost" parameterType="com.kb.board.dto.BoardPost">
        <![CDATA[
        UPDATE board_post
        SET title = #{title},
            content = #{content},
            modified_date = CURRENT_TIMESTAMP,
            type = #{type},
            status = #{status}
        WHERE post_id = #{postId}
        ]]>
    </update>

    <update id="deleteBoardPost" parameterType="int">
        <![CDATA[
        DELETE FROM board_post WHERE post_id = #{postId}
        ]]>
    </update>

    <select id="selectReplyByRno" parameterType="long" resultType="com.kb.board.dto.BoardReply">
        select
            r.rno, r.bno, r.content, m.id as member_id, m.name, r.create_date, r.modify_date
        from board_reply r
                 join member m on(r.mno = m.mno)
        where r.status='y' and r.rno = #{rno}
    </select>

    <delete id="deleteReply" parameterType="long">
        delete from board_reply where rno = #{rno}
    </delete>
</mapper>
